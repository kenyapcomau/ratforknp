# etoa - translate EBCDIC to ASCII

define(STDIN,7)
define(STDOUT,6)
define(STDERR,5)
define(char,integer)

implicit none
integer i,j,k
integer buf(20)
char cbuf(80),dbuf(80)

call carcon(STDOUT,0)
open(STDIN,status='OLD',access='SEQUENTIAL',
	form='BINARY',recl=80,iostat=i)
repeat{
	read(STDIN,end=1000)buf
	i=1; j=0; k=1
	while(k <= 80){
		call ilbyte(cbuf(k),buf(i),j)
		j=j+1; k=k+1
		if(j >= 4){
			j=0
			i=i+1
			}
		}
	call conv(cbuf,dbuf,80)
	do i=1,80
		call isbyte(dbuf(i),dbuf(i),0)
	write(STDOUT,'(80a1)')dbuf
	}
1000 end

subroutine conv(src,dst,len)
implicit none
char src(1),dst(1),len
integer i
char etoa

do i=1,len
	dst(i)=etoa(src(i))
return
end

char function etoa(c)
implicit none
char c,table(256)

data table/5*0,9,2*0,
	3*0,11,12,13,2*0,
	5*0,10,2*0,
	8*0,
	5*0,10,2*0,
	8*0,
	8*0,
	8*0,
	32,7*0,
	2*0,91,46,60,40,43,33,
	38,7*0,
	2*0,93,36,42,41,59,94,
	45,47,92,5*0,
	2*0,124,44,37,95,62,63,
	8*0,
	0,96,58,35,64,39,61,34,
	0,97,98,99,100,101,102,103,
	104,105,6*0,
	0,106,107,108,109,110,111,112,
	113,114,6*0,
	0,126,115,116,117,118,119,120,
	121,122,6*0,
	8*0,
	8*0,
	123,65,66,67,68,69,70,71,
	72,73,6*0,
	125,74,75,76,77,78,79,80,
	81,82,6*0,
	92,0,83,84,85,86,87,88,
	89,90,6*0,
	48,49,50,51,52,53,54,55,
	56,57,6*0/

return(table(iand(c,255)+1))
end
