define(STDIN,5)
define(STDOUT,6)

# cal - prints calendar(s) for desired year

implicit none
integer year,copies

call carcon(STDOUT,1)
repeat{
	read(STDIN,500,end=999)year,copies
	500 format(i4,i2)
	if(copies <= 0)
		break
	if(year < 0)
		next
	for(; copies > 0; copies=copies-1)
		call docal(year)
	}
999 end

# docal - print calendar for year

subroutine docal(year)
implicit none
integer year
integer daywk,mlen
integer month,i,j,k,l,m,m1,m2,start,fin
character*2 mon(42,12)
character*10 mname(12)
character*2 dname(31),wname(7),blnk

data mname/'  January',' Februrary','   March','   April','    May',
	'   June','   July','  August',' September','  October',
	' November',' December'/
data dname/' 1',' 2',' 3',' 4',' 5',' 6',' 7',' 8',' 9',
	'10','11','12','13','14','15','16','17','18','19',
	'20','21','22','23','24','25','26','27','28','29',
	'30','31'/
data wname/'Su','Mo','Tu','We','Th','Fr','Sa'/
data blnk/'  '/

write(STDOUT,600)year
600 format('1',//,1x,62x,i4,///)
month=1
do i=1,3{
	do j=1,4{
		do k=1,42
			mon(k,j)=blnk
		start=daywk(year,month)+1
		fin=start+mlen(year,month)-1
		do k=start,fin
			mon(k,j)=dname(k-start+1)
		month=month+1
		}
	m1=month-4
	m2=month-1
	write(STDOUT,601)(mname(m),m=m1,m2)
	601 format(1x,2x,4(10x,a,11x))
	write(STDOUT,602)(wname,m=1,4)
	602 format(/,1x,7x,4(7(a,1x),10x))
	start=1
	do k=1,6{
		fin=start+6
		write(STDOUT,602)((mon(l,m),l=start,fin),m=1,4)
		start=start+7
		}
	write(STDOUT,603)
	603 format(//)
	}
return
end

# mlen - returns length of month

integer function mlen(year,month)
implicit none
integer year,month
logical leapyr
integer msize(12)

data msize/31,28,31,30,31,30,31,31,30,31,30,31/

if(month < 1 | month > 12){
	mlen=0
	return
	}
mlen=msize(month)
if(leapyr(year) & month == 2)
	mlen=29
return
end

# leapyr - returns true if year is leap

logical function leapyr(year)
implicit none
integer year

leapyr=(mod(year,4) == 0 & mod(year,100) != 0) | mod(year,400) == 0
return
end

# daywk - returns day of week of first day of month

integer function daywk(year,month)
implicit none
logical leapyr
integer year,month
integer y
integer mnum(12)

data mnum/0,31,59,90,120,151,181,212,243,273,304,334/

if(month < 1 | month > 12){
	daywk=0
	return
	}
y=year - 1
daywk=y + y / 4 - y / 100 + y / 400 + mnum(month) + 1
if(leapyr(year) & month >= 3)
	daywk=daywk + 1
daywk=mod(daywk,7)
return
end
